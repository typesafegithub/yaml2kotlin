name: generated

on:
  push:
    branches:
      - 'branch1'
      - 'branch2'
    tags:
      - 'tag1'
      - 'tag2'
    paths:
      - 'path1'
      - 'path2'
  pull_request:
    types:
      - 'auto_merge_disabled'
      - 'opened'
    branches:
      - 'branch1'
      - 'branch2'
    paths:
      - 'path1'
      - 'path2'
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        type: choice
        required: true
        default: 'warning'
        options:
          - 'info'
          - 'warning'
          - 'debug'
  pull_request_target:

env:
  # Set the GRADLE_ENTERPRISE_ACCESS_KEY so that Gradle Build Scans are generated
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  # Enable debug for the `gradle-build-action` cache operations
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

jobs:
  "check_yaml_consistency":
    name: Check YAML consistency
    runs-on: "ubuntu-latest"
    steps:
      - id: step-0
        name: Check out
        uses: actions/checkout@v3
      - id: step-1
        name: Install Kotlin
        run: sudo snap install --classic kotlin
      - id: step-2
        if: "true"
        name: Consistency check
        run: diff -u '.github/workflows/build.yaml' <('.github/workflows/build.main.kts')
        env:
          HELLO: ok
          PAT: rick
  "build_for_UbuntuLatest":
    runs-on: "ubuntu-latest"
    env:
        COLOR: blue
        SIZE: XXL
    needs:
      - "check_yaml_consistency"
    steps:
      - id: step-0
        name: Checkout
        uses: actions/checkout@v3
        env:
          HELLO: ok
          PAT: rick
      - id: step-1
        name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
        env:
          HELLO: ok
          PAT: rick
      - id: step-2
        name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
      - id: step-3
        name: setup
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: |
            hello
            world
          install: true
