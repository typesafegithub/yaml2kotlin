# This file was generated using Kotlin DSL (.github/workflows/refreshversionsbuild.main.kts).
# If you want to modify the workflow, please change the Kotlin file and regenerate this YAML file.
# Generated with https://github.com/typesafegithub/github-workflows-kt

name: 'RefreshVersions build'
on:
  pull_request:
    paths:
    - 'plugins/**'
    - 'sample-kotlin/**'
    - 'sample-groovy/**'
    - '!**.md'
    - '!.editorconfig'
    - '!**/.gitignore'
    - '!**.adoc'
    - '!docs/**'
  push:
    branches:
    - 'main'
    paths:
    - 'plugins/**'
    - 'sample-kotlin/**'
    - 'sample-groovy/**'
    - '!**.md'
    - '!.editorconfig'
    - '!**/.gitignore'
    - '!**.adoc'
    - '!docs/**'
  workflow_dispatch:
    inputs:
      run-refreshVersions-task:
        description: 'Run the refreshVersions task'
        type: 'boolean'
        required: true
        default: 'false'
      sample-kotlin:
        description: 'Enable sample-kotlin'
        type: 'boolean'
        required: true
        default: 'true'
      sample-groovy:
        description: 'Enable sample-groovy'
        type: 'boolean'
        required: true
        default: 'true'
      sample-multi-modules:
        description: 'Enable sample-multi-modules'
        type: 'boolean'
        required: true
        default: 'true'
      sample-kotlin-js:
        description: 'Enable sample-kotlin-js'
        type: 'boolean'
        required: true
        default: 'true'
      sample-android:
        description: 'Enable sample-android'
        type: 'boolean'
        required: true
        default: 'false'
      run-on:
        description: 'Where to run this workflow'
        type: 'choice'
        required: true
        default: 'ubuntu-latest'
        options:
        - 'windows-2022'
        - 'windows-2019'
        - 'windows-latest'
        - 'macos-11'
        - 'macos-10.5'
        - 'macos-latest'
        - 'ubuntu-20.04'
        - 'ubuntu-18.04'
        - 'ubuntu-latest'
jobs:
  check-all:
    runs-on: '${{ github.event.inputs.run-on || ''ubuntu-latest'' }}'
    steps:
    - id: 'step-0'
      name: 'Enable long paths for git Windows'
      run: 'git config --global core.longpaths true'
      if: '${{ runner.os == ''Windows'' }}'
    - id: 'step-1'
      name: 'CheckoutV3'
      uses: 'actions/checkout@v3'
    - id: 'step-2'
      name: 'Configure JDK'
      uses: 'actions/setup-java@v3'
      with:
        distribution: 'adopt'
        java-version: '11'
    - id: 'step-3'
      name: 'Check plugins and publish them to MavenLocal'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'plugins/gradlew'
        build-root-directory: 'plugins'
        arguments: 'check publishToMavenLocal --stacktrace'
    - id: 'step-4'
      name: 'Run refreshVersions on sample-kotlin'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'sample-kotlin/gradlew'
        build-root-directory: 'sample-kotlin'
        arguments: 'refreshVersions --stacktrace'
      if: '${{ github.event_name != ''workflow_dispatch'' || github.event.inputs.sample-kotlin == ''true'' && github.event.inputs.run-refreshVersions-task == ''true'' }}'
    - id: 'step-5'
      name: 'Check sample-kotlin'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'sample-kotlin/gradlew'
        build-root-directory: 'sample-kotlin'
        arguments: 'check --stacktrace --configuration-cache'
      if: '${{ github.event_name != ''workflow_dispatch'' || github.event.inputs.sample-kotlin == ''true'' }}'
    - id: 'step-6'
      name: 'Run refreshVersions on sample-groovy'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'sample-groovy/gradlew'
        build-root-directory: 'sample-groovy'
        arguments: 'refreshVersions --stacktrace'
      if: '${{ github.event.inputs.sample-groovy == ''true'' && github.event.inputs.run-refreshVersions-task == ''true'' }}'
    - id: 'step-7'
      name: 'Check sample-groovy'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'sample-groovy/gradlew'
        build-root-directory: 'sample-groovy'
        arguments: 'check --stacktrace'
      if: '${{ github.event.inputs.sample-groovy == ''true'' }}'
    - id: 'step-8'
      name: 'Check buildSrc of sample-groovy (simulates IDE Gradle sync)'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'sample-groovy/gradlew'
        build-root-directory: 'sample-groovy/buildSrc'
        arguments: 'help --stacktrace'
      if: '${{ github.event.inputs.sample-groovy == ''true'' }}'
    - id: 'step-9'
      name: 'Run refreshVersions on sample-multi-modules'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'sample-multi-modules/gradlew'
        build-root-directory: 'sample-multi-modules'
        arguments: 'refreshVersions --stacktrace'
      if: '${{ github.event.inputs.sample-multi-modules == ''true'' && github.event.inputs.run-refreshVersions-task == ''true'' }}'
    - id: 'step-10'
      name: 'Check sample-multi-modules'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'sample-multi-modules/gradlew'
        build-root-directory: 'sample-multi-modules'
        arguments: 'check --stacktrace'
      if: '${{ github.event.inputs.sample-multi-modules == ''true'' }}'
    - id: 'step-11'
      name: 'Run refreshVersions on sample-kotlin-js'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'sample-kotlin-js/gradlew'
        build-root-directory: 'sample-kotlin-js'
        arguments: 'refreshVersions --stacktrace'
      if: '${{ github.event.inputs.sample-kotlin-js == ''true'' && github.event.inputs.run-refreshVersions-task == ''true'' }}'
    - id: 'step-12'
      name: 'Check sample-kotlin-js'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'sample-kotlin-js/gradlew'
        build-root-directory: 'sample-kotlin-js'
        arguments: 'check --stacktrace'
      if: '${{ github.event.inputs.sample-kotlin-js == ''true'' }}'
    - id: 'step-13'
      name: 'Run refreshVersions on sample-android'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'sample-android/gradlew'
        build-root-directory: 'sample-android'
        arguments: 'refreshVersions --stacktrace'
      if: '${{ github.event.inputs.sample-android == ''true'' && github.event.inputs.run-refreshVersions-task == ''true'' }}'
    - id: 'step-14'
      name: 'Check sample-android'
      uses: 'gradle/gradle-build-action@v2'
      with:
        gradle-executable: 'sample-android/gradlew'
        build-root-directory: 'sample-android'
        arguments: 'check --stacktrace'
      if: '${{ github.event.inputs.sample-android == ''true'' }}'
